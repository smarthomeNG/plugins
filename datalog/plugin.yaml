# Metadata for the classic-plugin
plugin:
    # Global plugin attributes
    type: system                   # plugin type (gateway, interface, protocol, system, web)
    description:
        de: 'Loggen von Daten in ein anderes Logfile als das Standard Log'
        en: 'Logging of data in another log aside from default one'
    maintainer: ohinckel
    tester: '?'                    # Who tests this plugin?
    state: ready
#    keywords: kwd1 kwd2            # keywords, where applicable
    documentation: https://github.com/smarthomeNG/plugins/blob/develop/datalog/README.md        # url of documentation (wiki) page

# Following entries are for Smart-Plugins:
    version: 1.5.0                 # Plugin version
    sh_minversion: 1.5             # minimum shNG version to use this plugin
#    sh_maxversion:                 # maximum shNG version to use this plugin (leave empty if latest)
    multi_instance: True
    restartable: unknown
    classname: DataLog              # class containing the plugin

parameters:
    # Definition of parameters to be configured in etc/plugin.yaml

        path:
            type: str
            default: var/log/data
            description:
                de: "Spezifiziert das Verzeichnis in welches geloggt wird. Alle log Dateien werden in dieses \
                    Verzeichnis geschrieben. Es ist nicht möglich verschiedene Logs in unterschiedliche \
                    Verzeichnisse zu schreiben."
                en: "Specifies the path to log into. All log files will be logged into this directory. \
                    It's not possible to configure different log paths for different log files."

        filepatterns:
            type: dict
            default:
                default: "{log}-{year}-{month}-{day}.csv"
            description:
                de: "Angabe einer Dictionary von Mustern, welche die Dateinamen der Log-Dateien spezifizieren. \
                     Dazu wird ein Key-Value-Pair Syntax benutzt, was bedeutet, dass mehrere Muster oder Logdateien \
                     spezifiziert werden können.\n
                     Platzhalter, welche im `filepatterns` Parameter genutzt werden können:
                        * `log` - Type des Logs (z.B. 'default' im Default Wert)
                        * `year` - aktuelles Jahr
                        * `month` - aktueller Monat
                        * `day` - aktueller Tag"
                en: "This specifies a list of file patterns, which is used to build the target files \
                     to log data into. It's using a key-value pair syntax, which means you can \
                     configure multiple file patterns or log files.\n
                     Placeholders which can be used in the `filepatterns` option:
                        * `log` - specifies the type of log (e.g. 'default' in the example above)
                        * `year` - the current year
                        * `month` - the current month
                        * `day` - the current day"

        logpatterns:
            type: dict
            default:
                csv: "{time};{item};{value}\n"
            description:
                de: "Der logpatterns Parameter konfiguriert das Format in dem die Daten in die Log-Datei geschrieben \
                    werden. Dazu wird ein Key-Value-Pair Syntax benutzt, was bedeutet, dass mehrere Muster \
                    spezifiziert werden können. \n
                    Ein Log-Pattern wird verwendet, wenn die Extenstion des Dateinames dem Key entspricht."
                en: "The log pattners setting configured the format in which the data will be \
                    logged into the log files. It's using a key-value pair syntax, which means \
                    you can configure multiple log patterns.\n
                    A log pattern is used for logging when a file pattern is configured, where \
                    the extension (part behind the last `.`) matches the key."

        cycle:
            type: int
            default: 10
            description:
                de: "Der cycle Parameter definiert das Intervall, in welchem die Daten in die Log Dateien geschrieben werden."
                en: "the cycle parameter defines the interval to use to dump the data into the log files."


item_attributes:
    # Definition of item attributes defined by this plugin

    datalog:
        type: list(str)
        description:
            de: "Liste des Logs in die der Wert geschrieben werden soll."
            en: "List of logs to which the value shall be written"

item_structs: NONE
  # Definition of item-structure templates for this plugin

logic_parameters: NONE
    # Definition of logic parameters defined by this plugin

plugin_functions: NONE
    # Definition of function interface of the plugin

