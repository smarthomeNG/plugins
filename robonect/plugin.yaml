# Metadata for the plugin
plugin:
    # Global plugin attributes
    type: interface                   # plugin type (gateway, interface, protocol, system, web)
    description:
        de: 'Plugin zum Auslesen von Daten bzw. zum Ansteuern eines Mähroboters mit Robonect HX Modul (https://robonect.de/).'
        en: 'Plugin to read data / to control a robotic lawnmower with Robonect HX module (https://robonect.de/).'
    maintainer: psilo
#    tester:                         # Who tests this plugin?
    state: develop                  # change to ready when done with development
    keywords: robonect, lawnmower
#    documentation: https://github.com/smarthomeNG/smarthome/wiki/CLI-Plugin        # url of documentation (wiki) page
    support: https://knx-user-forum.de/forum/supportforen/smarthome-py/1515205-support-thread-f%C3%BCr-das-robonect-plugin-erweiterung-f%C3%BCr-bestimmte-m%C3%A4hroboter

    version: 1.0.0                  # Plugin version (must match the version specified in __init__.py)
    sh_minversion: 1.6              # minimum shNG version to use this plugin
#    sh_maxversion:                 # maximum shNG version to use this plugin (leave empty if latest)
#    py_minversion: 3.6             # minimum Python version to use this plugin
#    py_maxversion:                 # maximum Python version to use this plugin (leave empty if latest)
    multi_instance: False           # plugin supports multi instance
    restartable: unknown
    classname: Robonect             # class containing the plugin

parameters:
    # Definition of parameters to be configured in etc/plugin.yaml (enter 'parameters: NONE', if section should be empty)
    ip:
        type: ip
        mandatory: False
        description:
            de: 'IP des Mähroboters (only needed when API is used).'
            en: 'IP of the robotic lawnmower (only needed whan API is used).'
    mode:
        type: str
        default: 'api'
        description:
            de: 'Art der Anbindung: nur via API (nur Pollen von Daten) oder API + MQTT (für live updates - benötigt das konfigurierte MQTT Modul von SmartHomeNG!).'
            en: 'Type of connection: only via API (only polling of data) or API + MQTT (for live updates - requires the configured MQTT module of SmartHomeNG!).'
        valid_list:
            - 'api'
            - 'mqtt'
    user:
        type: str
        default: ''
        description:
            de: 'User der Robonect HX Weboberfläche.'
            en: 'User of the Robonect HX web gui.'
    password:
        type: str
        default: ''
        hide: True
        description:
            de: 'Passwort des Users der Robonect HX Weboberfläche.'
            en: 'Password of the user of the Robonect HX web gui.'

item_attributes:
    # Definition of item attributes defined by this plugin (enter 'item_attributes: NONE', if section should be empty)
    robonect_data_type:
        type: str
        mandatory: True
        description:
            de: 'Robonect Datentyp. Für mögliche Werte in die "struct" schauen.'
            en: 'Robonect data type. See struct for possible values.'
    robonect_battery_index:
        type: num
        mandatory: False
        description:
            de: 'Index der Batterie, falls nur eine verbaut ist: 0.'
            en: 'Index of the battery. If only one is present: 0.'

item_structs:
    main:
        name: Main Data From Robonect HX Module

        robonect_name:
            name: 'Lawnmower Nickname'
            robonect_data_type: device/name
            type: str

        robonect_id:
            name: Robonect ID
            robonect_data_type: robonect_id
            type: str

        robonect_version:
            robonect_data_type: robonect_version
            type: str

        robonect_version_comment:
            robonect_data_type: robonect_version_comment
            type: str

        robonect_version_compiled:
            robonect_data_type: robonect_version_compiled
            type: str

        serial:
            robonect_data_type: device/serial
            type: str

        mower:
            name: 'Information About the Hardware and Software of the Mower'

            hardware:
                serial:
                    robonect_data_type: hardware_serial
                    type: str

                production_date:
                    robonect_data_type: production_date
                    type: str
            msw:
                title:
                    robonect_data_type: msw_title
                    type: str
                version:
                    robonect_data_type: msw_version
                    type: str
                compiled:
                    robonect_data_type: msw_compiled
                    type: str

            wlan:
                at-version:
                    robonect_data_type: wlan_at-version
                    type: str
                sdk-version:
                    robonect_data_type: wlan_sdk-version
                    type: str

        status:
            name: Information About the Status of the Robonect HX Module

            status:
                name: Status Code
                robonect_data_type: mower/status
                type: num

            status_text:
                name: 'Status of the Mower as Text'
                type: str
                robonect_data_type: mower/status/text

            distance:
                robonect_data_type: status_distance
                type: num

            stopped:
                robonect_data_type: mower/stopped
                type: bool

            duration:
                name: 'Duration of Mode in Minutes'
                robonect_data_type: mower/status/duration
                type: num

            mode:
                name: 'Mode of the Mower'
                robonect_data_type: mower/mode
                type: num

            mode_text:
                name: 'Mode of the Mower as Text'
                type: str
                robonect_data_type: mower/mode/text

            battery:
                name: 'Battery Level in %'
                robonect_data_type: mower/battery/charge
                type: num

            hours:
                robonect_data_type: status_hours
                type: num
        wlan:
            signal:
                name: 'Wifi Signal Strength'
                robonect_data_type: wlan/rssi
                type: num
        health:
            temperature:
                name: 'Internal Temperature'
                robonect_data_type: health/climate/temperature
                type: num

            humidity:
                name: 'Internal Humidity'
                robonect_data_type: health/climate/humidity
                type: num
        clock:
            date:
                robonect_data_type: date
                type: str

            time:
                robonect_data_type: time
                type: str

            unix:
                robonect_data_type: unix
                type: num

    batteries:
        battery_0_id:
            robonect_data_type: battery_id
            robonect_battery_index: 0
            type: num
        battery_0_charge:
            robonect_data_type: battery_charge
            robonect_battery_index: 0
            type: num
        battery_0_voltage:
            robonect_data_type: battery_voltage
            robonect_battery_index: 0
            type: num
            eval: value/1000
        battery_0_current:
            robonect_data_type: battery_current
            robonect_battery_index: 0
            type: num
        battery_0_temperature:
            name: 'Battery Temperature in °C'
            robonect_data_type: battery_temperature
            robonect_battery_index: 0
            type: num
            eval: value/10
        battery_0_capacity_full:
            robonect_data_type: battery_capacity_full
            robonect_battery_index: 0
            type: num
        battery_0_capacity_remaining:
            robonect_data_type: battery_capacity_remaining
            robonect_battery_index: 0
            type: num

plugin_functions:
    # Definition of plugin functions defined by this plugin (enter 'plugin_functions: NONE', if section should be empty)
    get_mode_as_text:
        type: str
        description:
            de: "Gibt den Mode des Rasenmähers als String zurück."
            en: "Returns the mode of the mower as string."
        parameters:
            index:
                type: int
                description:
                    de: "mode"
                    en: "mode"


logic_parameters:
    # Definition of logic parameters defined by this plugin (enter 'logic_parameters: NONE', if section should be empty)

