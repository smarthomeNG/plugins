# Metadata for the plugin
plugin:
    # Global plugin attributes
    type: gateway                  # plugin type (gateway, interface, protocol, system, web)
    description:
        de: 'Plugin zur Steuerung von Ger채ten, die mit einem Zigbee Gateway mit der Zigbee2MQTT Firmware versehen sind. Die Kommunikation erfolgt 체ber das MQTT Module von SmartHomeNG.'
        en: 'Plugin to control devices which are linked to Zigbee Gateway equipped with Zigbee2MQTT firmware. Communication is handled through the MQTT module of SmartHomeNG.'
    maintainer: Sebastian Helms
    tester: Sebastian Helms        # Who tests this plugin?
    state: develop                 # change to ready when done with development
    keywords: iot
    documentation: ''
    support: https://knx-user-forum.de/forum/supportforen/smarthome-py/1856775-support-thread-f%C3%BCr-das-zigbee2mqtt-plugin

    version: 2.0.0                 # Plugin version
    sh_minversion: 1.9.5.6         # minimum shNG version to use this plugin
#    sh_maxversion:                # maximum shNG version to use this plugin (leave empty if latest)
    py_minversion: 3.8             # minimum Python version to use for this plugin
    multi_instance: True           # plugin supports multi instance
    restartable: True
    classname: Zigbee2Mqtt         # class containing the plugin

parameters:
    # Definition of parameters to be configured in etc/plugin.yaml (enter 'parameters: NONE', if section should be empty)
    base_topic:
        type: str
        default: 'zigbee2mqtt'
        description:
            de: Topic, um mit dem ZigBee2MQTT-Gateway zu kommunizieren (%topic%)
            en: Base topic for communicating with the ZigBee2MQTT gateway (%topic%)

    poll_period:
        type: int
        default: 900
        valid_min: 10
        valid_max: 3600
        description:
            de: Zeitabstand in Sekunden, in dem der Status des Gateway abgefragt wird
            en: Interval in seconds to poll the gateway status

    read_at_init:
        type: bool
        default: True
        description:
            de: Einlesen aller Werte beim Start
            en: Read all values at init

    suspend_item:
        type: str
        default: ''
        description:
            de: Pfad zum Suspend-Item
            en: Path to suspend item

    z2m_gui:
        type: str
        default: 'localhost:8080'
        description:
            de: Web-Adresse des zigbee2mqtt-Web-GUI (Standard localhost:8080)
            en: Web address of the zigbee2mqtt-web-GUI (default localhost:8080)

item_attributes:
    # Definition of item attributes defined by this plugin (enter 'item_attributes: NONE', if section should be empty)
    z2m_topic:
        type: str
        description:
            de: Name des anzusprechenden Ger채tes, entweder die Seriennummer ('0xdeadbeef') oder der friendly_name
            en: Name of the device to be addressed, either the serial number ('0xdeadbeef') or the friendly_name

    z2m_attr:
        type: str
        description:
            de: "Zu lesendes/schreibendes Attribut des ZigBee2MQTT Devices"
            en: "Attribute of ZigBee2MQTT device that shall be read/written"

    z2m_readonly:
        type: bool
        description:
            de: "Attribut wird nur gelesen"
            en: "Attribute can only be read"

    z2m_writeonly:
        type: bool
        description:
            de: "Attribut wird nur geschrieben. Wenn z2m_readonly auch gesetzt ist, hat readonly Vorrang"
            en: "Attribute can only be written. Will be overridden by z2m_readonly"

    z2m_bool_values:
        type: list
        description:
            de: Ersetzungwerte f체r bool-Werte (z.B. ['OFF', 'ON'])
            en: substitution values for bool items (e.g. ['OFF', 'ON'])


item_structs:
    dimmer:
        action:
            type: str
            z2m_topic: ..:.
            z2m_attr: action
            enforce_updates: true

        battery:
            type: num
            z2m_topic: ..:.
            z2m_attr: battery

        duration:
            type: num
            z2m_topic: ..:.
            z2m_attr: action_duration

        last_seen:
            type: foo
            z2m_topic: ..:.
            z2m_attr: last_seen

        linkquality:
            type: num
            z2m_topic: ..:.
            z2m_attr: linkquality

        on:
            type: bool
            eval: True if sh...action() == 'on_press' else (False if sh...action() in ('on_press_release', 'on_hold_release') else None)
            eval_trigger: ..action

            hold:
                type: bool
                eval: True if sh....action() == 'on_hold' else (False if sh....action() == 'on_hold_release' else None)
                eval_trigger: ...action

        off:
            type: bool
            eval: True if sh...action() == 'off_press' else (False if sh...action() in ('off_press_release', 'off_hold_release') else None)
            eval_trigger: ..action

            hold:
                type: bool
                eval: True if sh....action() == 'off_hold' else (False if sh....action() == 'off_hold_release' else None)
                eval_trigger: ...action

        up:
            type: bool
            eval: True if sh...action() == 'up_press' else (False if sh...action() in ('up_press_release', 'up_hold_release') else None)
            eval_trigger: ..action

            hold:
                type: bool
                eval: True if sh....action() == 'up_hold' else (False if sh....action() == 'up_hold_release' else None)
                eval_trigger: ...action

        down:
            type: bool
            eval: True if sh...action() == 'down_press' else (False if sh...action() in ('down_press_release', 'down_hold_release') else None)
            eval_trigger: ..action

            hold:
                type: bool
                eval: True if sh....action() == 'down_hold' else (False if sh....action() == 'down_hold_release' else None)
                eval_trigger: ...action

    light_white_ambient_group:
        type: bool
        z2m_attr: state
        z2m_bool_values: ['OFF', 'ON']

        brightness:
            type: num
            z2m_topic: ..:.
            z2m_attr: brightness

            percent:
                type: num
                z2m_topic: ..:.
                z2m_attr: brightness_percent

        color_temp:
            type: num
            remark: 153..454, coolest, cool, neutral, warm, warmest
            z2m_topic: ..:.
            z2m_attr: color_temp
            
            kelvin:
                type: num
                z2m_topic: ..:.
                z2m_attr: color_temp_kelvin

        color_mode:
            type: str
            z2m_topic: ..:.
            z2m_attr: color_mode

        scene:
            type: str
            enforce_updates: true
            z2m_topic: ..:.
            z2m_attr: scene_recall
            z2m_readonly: false
            z2m_writeonly: true

        scenes:
            type: list
            z2m_topic: ..:.
            z2m_attr: scenelist
            z2m_readonly: true
            z2m_writeonly: false

        color_startup:
            type: num
            remark: 153..454, coolest, cool, neutral, warm, warmest, previous
            z2m_topic: ..:.
            z2m_attr: color_temp_startup

        last_seen:
            type: foo
            z2m_topic: ..:.
            z2m_attr: last_seen

    light_white_ambient:
        struct: zigbee2mqtt.light_white_ambient_group

        linkquality:
            type: num
            z2m_topic: ..:.
            z2m_attr: linkquality

        update:
            type: dict
            z2m_topic: ..:.
            z2m_attr: update

            installed_version:
                type: num
                eval: sh...()['installed_version']
                eval_trigger: ..
                
            latest_version:
                type: num
                eval: sh...()['latest_version']
                eval_trigger: ..

            state:
                type: str
                eval: sh...()['state']
                eval_trigger: ..

    light_rgb_group:
        struct: zigbee2mqtt.light_white_ambient_group

        color:
            type: dict
            z2m_topic: ..:.
            z2m_attr: color

            r:
                type: num
                z2m_topic: ..:.
                z2m_attr: color_r

            g:
                type: num
                z2m_topic: ..:.
                z2m_attr: color_g

            b:
                type: num
                z2m_topic: ..:.
                z2m_attr: color_b

            rgb:
                type: str
                z2m_topic: ..:.
                z2m_attr: color_rgb

        color_startup:
            type: dict
            z2m_topic: ..:.
            z2m_attr: color_temp_startup

    light_rgb:
        struct: zigbee2mqtt.light_rgb_group

        linkquality:
            type: num
            z2m_topic: ..:.
            z2m_attr: linkquality

        update:
            type: dict
            z2m_topic: ..:.
            z2m_attr: update

            installed_version:
                type: num
                eval: sh...()['installed_version']
                eval_trigger: ..
                
            latest_version:
                type: num
                eval: sh...()['latest_version']
                eval_trigger: ..

            state:
                type: str
                eval: sh...()['state']
                eval_trigger: ..

    bridge:
        z2m_topic: bridge

        online:
            type: bool
            z2m_topic: ..:.
            z2m_attr: online
            z2m_readonly: true

        config:
            type: dict
            z2m_topic: ..:.
            z2m_attr: config
            z2m_readonly: true

        coordinator:
            type: dict
            z2m_topic: ..:.
            z2m_attr: coordinator
            z2m_readonly: true

        config_schema:
            type: dict
            z2m_topic: ..:.
            z2m_attr: config_schema
            z2m_readonly: true

        network:
            type: dict
            z2m_topic: ..:.
            z2m_attr: network
            z2m_readonly: true

        permit_join:
            type: bool
            z2m_topic: ..:.
            z2m_attr: permit_join
            z2m_bool_values: [false, true]

        restart:
            type: bool
            z2m_topic: ..:.
            z2m_attr: restart
            z2m_bool_values: [false, true]
            z2m_writeonly: true
            autotimer: 1=False

        version:
            type: str
            z2m_topic: ..:.
            z2m_attr: version

        devices:
            type: list
            z2m_topic: ..:.
            z2m_attr: devices

        groups:
            type: list
            z2m_topic: ..:.
            z2m_attr: groups

        
plugin_functions: NONE
    # Definition of plugin functions defined by this plugin (enter 'plugin_functions: NONE', if section should be empty)

logic_parameters: NONE
    # Definition of logic parameters defined by this plugin (enter 'logic_parameters: NONE', if section should be empty)
