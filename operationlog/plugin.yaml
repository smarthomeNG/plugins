%YAML 1.1
# vim: set encoding=utf-8 tabstop=4 softtabstop=4 shiftwidth=4 expandtab
---

# Metadata for the Smart-Plugin
plugin:
    # Global plugin attributes
    type: system                  # plugin type (gateway, interface, protocol, system, web)
    description:                  # Alternative: description in multiple languages
        de: 'Implementierung separater Logs'
        en: 'Implementation of additional logs'
    maintainer: 'bmxp'
    tester: Sandman60, onkelandy, Morg
    keywords: Operation logging SmartVISU
    state: deprecated
    support: https://knx-user-forum.de/forum/supportforen/smarthome-py/1496323-support-thread-für-operationlog-plugin
    version: 1.3.6                 # Plugin version
    sh_minversion: 1.4             # minimum shNG version to use this plugin
    # sh_maxversion:               # maximum shNG version to use this plugin (leave empty if latest)
    multi_instance: false          # plugin supports multi instance
    restartable: true
    classname: OperationLog        # class containing the plugin

parameters:
    # Definition of parameters to be configured in etc/plugin.yaml
    name:
        type: str
        description:
            de: 'Definiert den Namen des Logs'
            en: 'Defines the name of the log'

    maxlen:
        type: int
        default: 50
        description:
            de: 'Gibt an, wieviele Einträge im Speicher vorgehalten werden'
            en: 'Specifies how many log entries will be kept in memory'

    cache:
        type: bool
        default: true
        description:
            de: 'Aktiviert die Caching-Funktion für das Log (Log bleibt bei Neustart erhalten)'
            en: 'Activates the caching for the log (log will be restored on restarts)'

    logtofile:
        type: bool
        default: true
        description:
            de: 'Aktiviert das Schreiben von Logeinträgen in eine Datei'
            en: 'Activates logging entries into to file'

    filepattern:
        type: str
        default: '{year:04}-{month:02}-{day:02}-{name}.log'
        description:
            de: 'Definiert das Namensformat für die Logdateien'
            en: 'Defines the name pattern for the log files'

    logger:
        type: str
        default: ''
        description:
            de: 'Schreibt zusätzlich in den angegebenen Python Standard Logger (z.B. "plugins.operationlog")'
            en: 'Additionally log to the given logger (e.g. "plugins.operationlog.logger")'

    logdirectory:
        type: str
        default: "var/log/operationlog/"
        description:
            de: 'Vorgabe des Verzeichnisses für die Logfiles'
            en: 'Preset the directory for the logfiles'

    mapping:
        type: list(str)
        default: ["time","thread","level","message"]
        description:
            de: >
                Definiert eine Liste mit kommagetrennten Werten die für jede Nachricht geloggt werden.
                Die folgenden internen Zuordnungen können benutzt werden:

                time - Zeitstempel des Eintrags
                thread - Thread der die Daten erzeugt
                level - Der log level (Standard ist INFO)
                message - Die Nachricht

                Die Vorgabe sollte beibehalten werden, wenn das Log in SmartVISU angezeigt werden soll,
                sonst werden die Werte von der SmartVISU für die Darstellung nicht korrekt interpretiert.
            en: >
                This configures the list of values with comma separated values which are logged for each log message.
                The following internal mappings can be used and will be automatically set
                if not given explicitely when logging data:

                time - the timestamp of log
                thread - the thread logging data
                level - the log level (defaults to INFO)
                message - the message

                The default value should not be changed. Otherwise the SmartVISU might misinterpret the values for display.

    items:
        type: list(str)
        description:
            de: >
                Jedes mal wenn ein Item aktualisiert wird, wird ein Logeintrag geschrieben unter der
                Berücksichtigung der konfigurierten Items und deren Werte als Log Werte

                Wird dies nicht angegeben, dann werden die vorgegebenen Zuordnungswerte verwendet:
                  - item_a --> now
                  - item_b --> thread info
                  - item_c --> log level
                  - item_d --> message

            en: >
                Each time an item is updated using the memlog configuration setting, a log entry will be written
                using the list of items configured in this attribute as log values.

                When this is not configured, the default mapping values will be used the associated item's value will
                be logged. e.g.:
                  - item_a --> now
                  - item_b --> thread info
                  - item_c --> log level
                  - item_d --> message

item_attributes:
    # Definition of item attributes defined by this plugin
    olog:
        type: str
        description:
            de: 'Wenn gesetzt, werden Item-Änderungen in das angegebene Log geloggt'
            en: 'When set, item changes will be logged to the given log'
    olog_txt:
        type: str
        description:
            de: 'Gibt den Text an, der bei Änderungen geloggt werden soll'
            en: 'Specifies the text to log on changes'
    olog_level:
        type: str
        valid_list:
            - DEBUG
            - INFO
            - WARNING
            - ERROR
            - NONE
        description:
            de: >
                Gibt den Log-Level an (DEBUG, INFO, WARNING, ERROR, NONE).
                NONE bedeutet, dass kein Zeitstempel und Loglevel in die Datei geschrieben
                wird (äquivalent zum datalog Plugin), für Memory und zusätzliches
                Log wird der Loglevel auf INFO gesetzt.
            en: >
                Specifies the log level (DEBUG, INFO, WARNING, ERROR, NONE)
                NONE means, there is no timestamp and log level written to the file
                (as with the datalog plugin). However, for memory and additional
                log files, the INFO level is used.
    olog_rules:
        type: str
        description:
            de: 'Definiert bestimmte Regel/Mappings für das Logging'
            en: 'Declares specific rules/mappings for the logging'

item_structs: NONE
    # Definition of item-structure templates for this plugin

logic_parameters:
    # Definition of logic parameters defined by this plugin
    olog:
        type: str
        description:
            de: 'Wenn gesetzt, werden Item-Änderungen in das angegebene Log geloggt'
            en: 'When set, item changes will be logged to the given log'
    olog_txt:
        type: str
        description:
            de: 'Gibt den Text an, der bei Änderungen geloggt werden soll'
            en: 'Specifies the text to log on changes'
    olog_level:
        type: str
        valid_list:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
          - NONE
        description:
            de: 'Gibt den Log-Level an (DEBUG, INFO, WARNING, ERROR, NONE)'
            en: 'Specifies the log level (DEBUG, INFO, WARNING, ERROR, NONE)'

plugin_functions: NONE
    # Definition of function interface of the plugin
