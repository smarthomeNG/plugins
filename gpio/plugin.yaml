# Metadata for the Smart-Plugin
plugin:
    # Global plugin attributes
    type: interface                 # plugin type (gateway, interface, protocol, system, web)
    description:
        de: 'GPIO-Unterstützung für Rasberry Pi, **seit SmartHomeNG v1.3**'
        en: 'GPIO support for Raspberry Pi, **since SmarthomeNG v1.3**'
    description_long:
        de: 'GPIO-Unterstützung für den Rasberry Pi.\n
            Dieses Plugin unterstützt über das RPi.GPIO-Modul das Einbinden von externen Sensoren und Aktoren,
            die direkt am Raspberry Pi angeschlossen werden. Damit ist es beispielsweise möglich,
            den Zustand von Reedkontakten einzulesen oder LEDs zu aktivieren und beispielsweise eine
            `Posteinwurferkennung <https://redaktion.knx-user-forum.de/posteinwurferkennung/>`_ zu basteln.
            Leider sind die GPIOs für die Raspberry Pi <=3+ rein digital, sodass analoge Signale z.B.
            eines Distanzsensors nur über Umwege abgegriffen werden können.
            '
        en: 'GPIO support for the Raspberry Pi.\n
            This plugin supports the implementation of external sensors and actors directly connected to the
            Raspberry Pi using the RPi.GPIO module. This makes it possible to get values of reed sensors or
            activate LED lights like it is used for `smart mailboxes <https://redaktion.knx-user-forum.de/posteinwurferkennung/>`_.
            The GPIOs of the Raspberry Pi <=3+ are limited to digital signals. If you want to attach a distance
            sensor or other hardware providing analog signals you have to use additional hardware.
            '
    maintainer: onkelandy
    tester: cmalo, ohinckel, morg
    state: ready
    requirements:
        de: 'RPi.GPIO Python Modul'
        en: 'RPi.GPIO python module'
    keywords: iot gpio raspberrypi

    version: 1.5.0                 # Plugin version
    sh_minversion: 1.4             # minimum shNG version to use this plugin
    multi_instance: false          # plugin supports multi instance
    restartable: unknown
    classname: GPIO                # class containing the plugin

parameters:
    # Definition of parameters to be configured in etc/plugin.yaml
    mode:
        type: str
        default: 'BOARD'
        valid_list:
          - 'board'
          - 'bcm'
          - 'BOARD'
          - 'BCM'
        description:
            de: 'Zuweisungsmethode der Pinbelegung.'
            en: 'Method of pin assignment'
        description_long:
            de: '**Zuweisungsmethode der Pinbelegung.**\n
                Hier wird der GPIO PIN Modus deklariert, der die Nummerierung der Pins definiert.
                `Mehr Infos über GPIO Header <https://www.raspberrypi-spy.co.uk/2012/06/simple-guide-to-the-rpi-gpio-header-and-pins/>`_
                '
            en: '**Method of pin assignment**\n
                Define the GPIO PIN Mode that you use to declare the pin numbers.
                `More info on GPIO headers <https://www.raspberrypi-spy.co.uk/2012/06/simple-guide-to-the-rpi-gpio-header-and-pins/>`_
                '

    bouncetime:
        type: int
        default: 300
        description:
            de: 'Prellzeit in ms, um Änderungen innerhalb kurzer Zeit zu verhindern.'
            en: 'bouncetime in ms to avoid multiple events in a short time period.'

    pullupdown:
        type: str
        default: 'up'
        valid list:
            - 'up'
            - 'UP'
            - 'down'
            - 'DOWN'
            - 'none'
            - 'NONE'
        description:
            de: 'Globale Pullup-/Pulldown-Konfiguration'
            en: 'Global pullup/pulldown preset'
        description_long:
            de: '**Globale Pullup-/Pulldown-Konfiguration**\n
                Hier wird festgelegt, was die systemweite Vorgabe der Pullup-/Pulldown-Konfiguration
                sein soll. Diese Einstellung kann je Item individuell überschrieben werden.
                '
            en: '**Global pullup/pulldown preset**\n
                Define the global preset for pullup/pulldown settings. This can be overridden
                individually by the corresponding item option.
                '
item_attributes:
    # Definition of item attributes defined by this plugin
    gpio_in:
        type: int
        description:
            de: 'Pin Nummer für den GPIO Eingang.'
            en: 'Pin number of the GPIO input.'
        description_long:
            de: '**Pin Nummer für den GPIO Eingang.**\n
                Angabe der Pin Nummer, an der beispielsweise ein Sensor o.ä. angeschlossen ist. Die Nummer hängt vom Modus in den Plugin-Paramtern ab!
                '
            en: '**Pin number of the GPIO input.**\n
                Define the pin number of your Raspberry Pi that should be read, i.e. where a sensor is attached. Beware that the number has to follow the rules of the "mode" you have defined in the plugin.yaml (Board or BCM).
                '

    gpio_out:
        type: int
        description:
            de: 'Pin Nummer für den GPIO Ausgang.'
            en: 'Pin number of the GPIO output.'
        description_long:
            de: '**Pin Nummer für den GPIO Ausgang.**\n
                Die Nummer hängt vom Modus in den Plugin-Paramtern ab! Der Ausgang wird zum Pluginstart automatisch aktualisiert, sollte also nicht im Item als gpio_in und gpio_out definiert werden.
                '
            en: '**Pin number of the GPIO output.**\n
                Define the pin number of your Raspberry Pi that should be written, i.e. where a LED is attached. Beware that the number has to follow the rules of the "mode" you have defined in the plugin.yaml (Board or BCM). The Output-Pin will also automatically be read by the plugin as Input.
                        '

    gpio_pud:
        type: str
        valid_list:
            - 'up'
            - 'UP'
            - 'down'
            - 'DOWN'
            - 'none'
            - 'NONE'
        description:
            de: 'Pullup-/Pulldown-Konfiguration'
            en: 'Pullup/pulldown setting'
        description_long:
            de: '**Pullup-/Pulldown-Konfiguration**\n
                Hier wird festgelegt, ob der jeweilige Pin den Software-Pullup bzw. -Pulldown
                aktivieren soll oder nicht. Wenn keine Angabe erfolgt, wird die globale Voreinstellung
                übernommen (vgl. Plugin-Parameter "pullupdown").
                '
            en: '**Pullup/pulldown setting**\n
                Define the pin setting for software pullup/pulldown. If this is not set, the global
                preset will be applied (see plugin parameter "pullupdown").
                '

    gpio_init:
        type: bool
        description:
            de: 'Startwert für GPIO Ausgang'
            en: 'Starting value for GPIO output'
        description_long:
            de: '**Startwert für GPIO Ausgang**\n
                Dieser Wert wird bei Initialisierung des Plugins auf dem Ausgang gesetzt.
                '
            en: '**Starting value for GPIO output**\n
                The GPIO output is initialized to this value on plugin startup.
                '

    gpio_invert:
        type: bool
        description:
            de: 'Ein-/Ausgabewerte an/aus invertieren'
            en: 'Swap high/low on input/output'
        description_long:
            de: '**Ein-/Ausgabewerte an/aus invertieren**\n
                Vertauscht die Zuordnung von Itemwert zu GPIO-Ein-/Ausgabe zu True->low/0, False->high/1. 
                Beachte: ein konfigurierter Initialwert wird auch invertiert.
                '
            en: '**Swap high/low on input/output**\n
                Swaps relation of item value to input/output level to True->low/0, False->high/1
                Take note: a configured initial value will also be inverted.
                '

item_structs: NONE
  # Definition of item-structure templates for this plugin

plugin_functions: NONE
# Definition of plugin functions defined by this plugin

logic_parameters: NONE
# Definition of logic parameters defined by this plugin
