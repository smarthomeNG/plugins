# Metadata for the classic-plugin
plugin:
    # Global plugin attributes
    type: interface                 # plugin type (gateway, interface, protocol, system, web)
    description:
        de: 'Unterstützt eBus Heizungen (z.B. Vailant, Wolf, Kromschroeder) - Dieses Plugin verbindet sich zu einem ebusd Deamon (http://www.cometvisu.de/wiki/Ebusd), welcher mit einer eBus Heizung kommuniziert. Voraussetzungen: Ein ebusd Deamon läuft auf dem Netzwerk. (Anmerkung: Der ebusd benötigt ein ebus-Interface um mit ihm zu kommunizieren.'
        en: 'Supports eBus heating systems (e.g. Vailant, Wolf, Kromschroeder) - The plugin connects to a ebusd damon (http://www.cometvisu.de/wiki/Ebusd) which is communicating with eBus heatings. Requirements: running ebusd deamon on the network (note: ebusd also requires an ebus-interface)'
    maintainer: '? (msinn)'
    tester: Sandman60
    state: develop
#    keywords: kwd1 kwd2            # keywords, where applicable
#    documentation: https://github.com/smarthomeNG/plugins/blob/develop/mqtt/README.md        # url of documentation (wiki) page
#    support: https://knx-user-forum.de/forum/supportforen/smarthome-py

# Following entries are for Smart-Plugins:
    version: 1.5.0                 # Plugin version
    sh_minversion: 1.5             # minimum shNG version to use this plugin
    sh_maxversion:                 # maximum shNG version to use this plugin (leave empty if latest)
    multi_instance: False
    restartable: unknown
    classname: eBus                 # class containing the plugin


parameters:
    # Definition of parameters to be configured in etc/plugin.yaml

    host:
        type: ip
        default: 127.0.0.1
        description:
            de: 'IP Adresse des ebusd Deamons'
            en: 'ip address of ebusd deamon'

    port:
        type: int
        valid_min: 0
        default: 8888
        description:
            de: 'Port auf dem der ebusd Deamon lauscht'
            en: 'port of ebusd deamon'

    cycle:
        type: int
        valid_min: 0
        default: 240
        description:
            de: 'Cycle Zeit zur Abfrage jedes Items'
            en: 'cycle of each item'

item_attributes:
    # Definition of item attributes defined by this plugin

    ebus_cmd:
        type: str
        description:
            de: "ebus_cmd ist das Kommando, welches durch die Telnet Verbindung zum ebusd übertragen wird - z.B. 'cir2 heat_pump_curr', 'mv yield_sum' or 'short hw_load'"
            en: "ebus_cmd is the command you use though the telnet-connection to ebusd - e.g. 'cir2 heat_pump_curr', 'mv yield_sum' or 'short hw_load'"

    ebus_type:
        type: str
        default: 'get'
        valid_list: ['get', 'set']
        valid_list_description:
            de: ['get', 'set']
            en: ['Items will only be readable, i.e. sensors', 'Items are read/write. All "set"-items will be read cyclic too!']
        description:
            de: 'ebus_type legt fest, ob vom ebusd Deamon nur gelesen werden soll oder ob auch Daten an ebusd übertragen werden sollen.'
            en: 'ebus_type determins, if data should only be read from the ebusd deamon or if data should be written to ebusd too.'


item_structs: NONE
  # Definition of item-structure templates for this plugin

logic_parameters: NONE
    # Definition of logic parameters defined by this plugin

plugin_functions: NONE
    # Definition of function interface of the plugin

